name: CI

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Check documentation
      run: cargo doc --no-deps --document-private-items

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-linux-gnu
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build
      run: cargo build --release --target x86_64-unknown-linux-gnu
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: telegram-claude-yolo-bot-x86_64-unknown-linux-gnu
        path: |
          target/x86_64-unknown-linux-gnu/release/telegram-claude-yolo-bot*
          !target/x86_64-unknown-linux-gnu/release/telegram-claude-yolo-bot.d

  publish:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: cargo install cargo-edit

      - name: Check if version already published
        id: version_check
        run: |
          CURRENT_VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version already exists on crates.io
          if cargo search telegram-claude-yolo-bot --limit 1 | grep -q "telegram-claude-yolo-bot = \"$CURRENT_VERSION\""; then
            echo "Version $CURRENT_VERSION already published, bumping version"
            echo "needs_bump=true" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT_VERSION not published yet"
            echo "needs_bump=false" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        if: steps.version_check.outputs.needs_bump == 'true'
        run: |
          cargo set-version --bump patch
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Cargo.toml
          git commit -m "Bump version for release"
          git push

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --no-verify



